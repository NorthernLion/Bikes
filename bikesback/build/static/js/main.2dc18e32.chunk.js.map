{"version":3,"sources":["logo.svg","App.js","util/ApiConnection.js","util/store.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","action","payload","url","method","data","prefix","token","options","headers","Authorization","concat","axios","get","post","put","delete","Promise","reject","Error","callApi","route","getState","user","then","res","dispatch","type","response","catch","err","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gOC2BzBC,0LArBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,0BADP,wBAGAF,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,wBATQC,6DCsBX,ICnBDC,EAAUC,0BAAgB,IAWjBC,EAPDC,sBACZH,EACAI,8BACEC,0BAAgBC,ID4BS,SAAAJ,GAAK,OAAI,SAAAK,GAAI,OAAI,SAACC,GAC7CD,EAAKC,GADmD,IAEhDC,EAAYD,EAAZC,QACJA,GAzCN,SAAiBC,EAAKC,EAAQC,EAAMC,EAAQC,GAC1C,IAAMC,EAAU,CACdC,QAAS,CACPC,cAAa,UAAAC,OAAYJ,KAG7B,OAAQH,GACN,IAAK,MACH,OAAOQ,IAAMC,IAAIV,EAAKK,GACxB,IAAK,OACH,OAAOI,IAAME,KAAKX,EAAKE,EAAMG,GAC/B,IAAK,MACH,OAAOI,IAAMG,IAAIZ,EAAKE,EAAMG,GAC9B,IAAK,SACH,OAAOI,IAAMI,OAAOb,EAAKK,GAC3B,QACE,OAAOS,QAAQC,OAAO,IAAIC,MAAM,yBA0BlCC,CAAQlB,EAAQmB,MAAOnB,EAAQE,OAAQF,EAAQG,KAAMH,EAAQI,OAAQX,EAAM2B,WAAWC,KAAKhB,OACxFiB,KAAK,SAACC,GACL9B,EAAM+B,SAAS,CAAEC,KAAI,GAAAhB,OAAKT,EAAQI,OAAb,WAA8BsB,SAAUH,EAAIpB,SAElEwB,MAAM,SAAAC,GAAG,OAAInC,EAAM+B,SAAS,CAAEC,KAAI,GAAAhB,OAAKT,EAAQI,OAAb,WAA8BsB,SAAUE,YE3CjFC,IAASC,OACNlD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAUtC,MAAOA,GAChBb,EAAAC,EAAAC,cAACkD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.2dc18e32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import axios from 'axios'\n\n// This is the only function that uses axios in the whole project.\n// The response axios gets from the api will be returned to handleRequest function.\nfunction callApi(url, method, data, prefix, token) {\n  const options = {\n    headers: {\n      Authorization: `bearer ${token}`\n    }\n  }\n  switch (method) {\n    case 'get':\n      return axios.get(url, options)\n    case 'post':\n      return axios.post(url, data, options)\n    case 'put':\n      return axios.put(url, data, options)\n    case 'delete':\n      return axios.delete(url, options)\n    default:\n      return Promise.reject(new Error('Invalid http method'))\n  }\n}\n\n// callController is called from the action creators to dispatch an ATTEMPT of getting data from the server. \n// It is the part of action creator that dispatches the action.\nexport const callController = (route, prefix, data, method = 'get') => (dispatch) => {\n  const payload = {\n    route,\n    method,\n    data,\n    prefix\n  }\n  dispatch({ type: `${prefix}ATTEMPT`, payload })\n}\n\n// If you feel a sudden urge to call this. Don't. It is only exported in order to be used as a middleware.\n// This is custom middleware that activates if action has payload and then calls callApi. \n// If there are errors action prefix_FAILURE will be dispatched.\n// If Successfull action prefix_SUCCESS will be dispatched. \n// All errors and data can be found from action.response.\n// It should only activate when callController is used to dispatch an action.\nexport const handleRequest = store => next => (action) => {\n  next(action)\n  const { payload } = action\n  if (payload) {\n    callApi(payload.route, payload.method, payload.data, payload.prefix, store.getState().user.token)\n      .then((res) => {\n        store.dispatch({ type: `${payload.prefix}SUCCESS`, response: res.data })\n      })\n      .catch(err => store.dispatch({ type: `${payload.prefix}FAILURE`, response: err }))\n  }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { handleRequest } from './ApiConnection'\n// import corporationReducer from '../containers/corporation/services/corporationReducer'\n\n\nconst reducer = combineReducers({\n  //corporations: corporationReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk, handleRequest)\n  )\n)\n\nexport default store","\nimport React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './util/store'\n\nReactDOM.render(\n  (<Provider store={store}> \n    <App /> \n  </Provider>),\n  document.getElementById('root'))"],"sourceRoot":""}